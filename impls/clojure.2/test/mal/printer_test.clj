(ns mal.printer-test
  (:require [clojure.test :refer [deftest is]]
            [mal.core :as core]))

(deftest core-pr-str
  (is (= (core/pr-str 1 true) "1"))
  (is (= (core/pr-str "1" true) "\"1\""))
  (is (= (core/pr-str (core/symbol "a") true) "a"))
  (is (= (core/pr-str [1 "2" (core/symbol "x")] true) "[1 \"2\" x]"))
  (is (= (core/pr-str (list 1 ["2" (core/symbol "some-symbol")]) true)
         "(1 [\"2\" some-symbol])"))
  (is (= (core/pr-str "abc\"def" true) "\"abc\\\"def\""))
  (is (= (core/pr-str "a\nb" true) "\"a\\nb\""))
  (is (= (core/pr-str "a\tb" true) "\"a\\tb\""))
  (is (= (core/pr-str "a\\b" true) "\"a\\\\b\""))
  (is (= (core/pr-str {} true) "{}"))
  (is (= (core/pr-str {1 2 3 4} true) "{1 2 3 4}"))
  (is (= (core/pr-str (core/keyword "some.namespace/some-keyword") true)
         ":some.namespace/some-keyword"))
  (is (= (core/pr-str {(core/keyword "a") 1 (core/keyword "b") 2} true)
         "{:a 1 :b 2}"))
  (is (= (core/pr-str nil true) "nil"))
  (is (= (core/pr-str true true) "true"))
  (is (= (core/pr-str false true) "false"))
  (is (= (core/pr-str "abc\"def" false) "abc\"def"))
  (is (= (core/pr-str "a\nb" false) "a\nb"))
  (is (= (core/pr-str "a\tb" false) "a\tb"))
  (is (= (core/pr-str "a\\b" false) "a\\b"))
  (is (= (core/pr-str (list "a\"b" "c\nd" "e\\f" "g\th") false)
         "(a\"b c\nd e\\f g\th)"))
  (is (= (core/pr-str ["a\"b" "c\nd" "e\\f" "g\th"] false)
         "[a\"b c\nd e\\f g\th]"))
  (is (= (core/pr-str {"a\"b" "c\nd" "e\\f" "g\th"} false)
         "{a\"b c\nd e\\f g\th}")))
